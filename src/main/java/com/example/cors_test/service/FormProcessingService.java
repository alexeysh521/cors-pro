package com.example.cors_test.service;

import com.example.cors_test.persistence.model.FormSubmission;
import com.example.cors_test.persistence.repository.FormSubmissionRepository;
import com.fasterxml.jackson.databind.ObjectMapper;
import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Service;

import java.util.Map;


@Service
@RequiredArgsConstructor
public class FormProcessingService {

    private final Logger LOGGER = LoggerFactory.getLogger(this.getClass());
    private final FormSubmissionRepository formSubmissionRepository;
    private final JavaMailSender mailSender;
    private final ObjectMapper objectMapper;

    // Name=–ê–ª–µ–∫—Å–µ–π&Email=alex@gmail.com&Textarea=–ü—Ä–∏–≤–µ—Ç&tranid=16757156:7888517302&formid=form1467857151
    @Transactional
    public ResponseEntity<Map<String, String>> handleTrainingRequest(Map<String, String> params) {
        String name = params.getOrDefault("Name", null);
        String email = params.getOrDefault("Email", null);
        String textArea = params.getOrDefault("Textarea", null);
        String tranid = params.getOrDefault("tranid", null);

        FormSubmission form = new FormSubmission(
                tranid,
                name,
                email,
                textArea
        );

        formSubmissionRepository.save(form);

        LOGGER.info("Handling training request form={}", params);
        return ResponseEntity.ok(Map.of("status", "success", "message", "–ó–∞—è–≤–∫–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"));
    }

    public ResponseEntity<Map<String, String>> handleContactRequest(Map<String, String> params) {
        // –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        return ResponseEntity.ok(Map.of("status", "success", "message", "–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ"));
    }

    public ResponseEntity<Map<String, String>> handleFoodOrder(Map<String, String> params) {
        // –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞
        return ResponseEntity.ok(Map.of("status", "success", "message", "–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É"));
    }


    private String createEmailText(FormSubmission request) {
        return String.format("""
        üèãÔ∏è –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
        --------------------
        üìù –ò–º—è: %s
        üìß Email: %s
        üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: %s
        ‚è∞ –í—Ä–µ–º—è: %s
        """,
                request.getName() != null ? request.getName() : "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
                request.getEmail() != null ? request.getEmail() : "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
                request.getTextArea() != null ? request.getTextArea() : "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
                java.time.LocalDateTime.now()
        );
    }
}
